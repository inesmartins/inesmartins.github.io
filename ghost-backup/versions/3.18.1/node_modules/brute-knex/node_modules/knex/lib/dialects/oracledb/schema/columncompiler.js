"use strict";

var _lodash = require("lodash");

const inherits = require('inherits');

const ColumnCompiler_Oracle = require('../../oracle/schema/columncompiler');

function ColumnCompiler_Oracledb() {
  ColumnCompiler_Oracle.apply(this, arguments);
}

inherits(ColumnCompiler_Oracledb, ColumnCompiler_Oracle);
(0, _lodash.assign)(ColumnCompiler_Oracledb.prototype, {
  time: 'timestamp with local time zone',
  datetime: function datetime(withoutTz) {
    let useTz;

    if ((0, _lodash.isObject)(withoutTz)) {
      useTz = withoutTz.useTz;
    } else {
      useTz = !withoutTz;
    }

    return useTz ? 'timestamp with local time zone' : 'timestamp';
  },
  timestamp: function timestamp(withoutTz) {
    let useTz;

    if ((0, _lodash.isObject)(withoutTz)) {
      useTz = withoutTz.useTz;
    } else {
      useTz = !withoutTz;
    }

    return useTz ? 'timestamp with local time zone' : 'timestamp';
  }
});
module.exports = ColumnCompiler_Oracledb;